SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ProcessFinalImport]
    @ImportSessionID UNIQUEIDENTIFIER
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRANSACTION;
    
    DECLARE @ProcessedCount INT = 0;
    DECLARE @ErrorCount INT = 0;
    
    BEGIN TRY
        -- Check if there are any validation errors
        SELECT @ErrorCount = COUNT(*) 
        FROM ProductImportStaging 
        WHERE ImportSessionID = @ImportSessionID AND ValidationErrors IS NOT NULL;
        
        IF @ErrorCount > 0
        BEGIN
            ROLLBACK TRANSACTION;
            SELECT 
                0 as Success,
                'Cannot process import: ' + CAST(@ErrorCount AS NVARCHAR(10)) + ' rows have validation errors' as ErrorMessage,
                0 as ProcessedCount;
            RETURN;
        END
        
        -- Process Updates first
        UPDATE p SET
            p.Name = s.Name,
            p.Category = s.Category,
            p.Price = s.Price,
            p.QuantityInStock = s.QuantityInStock,
            p.Description = s.Description,
            p.SaleStartDate = s.SaleStartDate
        FROM Products p
        INNER JOIN ProductImportStaging s ON p.ProductID = s.ExistingProductID
        WHERE s.ImportSessionID = @ImportSessionID 
          AND s.OperationType = 'Update'
          AND s.ValidationErrors IS NULL;
        
        SET @ProcessedCount = @@ROWCOUNT;
        
        -- Process Inserts with auto-generated SKUs
        DECLARE @MaxSKU INT = 0
        
        -- Find the highest numeric SKU currently in use
        SELECT @MaxSKU = ISNULL(MAX(TRY_CAST(SUBSTRING(SKU, 4, LEN(SKU)) AS INT)), 0)
        FROM Products 
        WHERE SKU LIKE 'SKU%' AND ISNUMERIC(SUBSTRING(SKU, 4, LEN(SKU))) = 1
        
        INSERT INTO Products (SKU, Name, Category, Price, QuantityInStock, Description, SaleStartDate)
        SELECT 
            CASE 
                WHEN SKU IS NULL OR SKU = '' THEN 
                    'SKU' + RIGHT('000000' + CAST(@MaxSKU + ROW_NUMBER() OVER (ORDER BY StagingId) AS NVARCHAR), 6)
                ELSE SKU 
            END,
            Name,
            CASE WHEN Category = '' THEN NULL ELSE Category END,
            Price,
            QuantityInStock,
            CASE WHEN Description = '' THEN NULL ELSE Description END,
            SaleStartDate
        FROM ProductImportStaging
        WHERE ImportSessionID = @ImportSessionID 
          AND OperationType = 'Insert'
          AND ValidationErrors IS NULL;
          
        SET @ProcessedCount = @ProcessedCount + @@ROWCOUNT;
        
        -- Clear staging data after successful processing
        DELETE FROM ProductImportStaging WHERE ImportSessionID = @ImportSessionID;
        
        COMMIT TRANSACTION;
        
        SELECT 
            1 as Success,
            'Successfully processed ' + CAST(@ProcessedCount AS NVARCHAR(10)) + ' products' as Message,
            @ProcessedCount as ProcessedCount;
            
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        
        SELECT 
            0 as Success,
            'Error processing import: ' + ERROR_MESSAGE() as ErrorMessage,
            0 as ProcessedCount;
    END CATCH
END
GO
