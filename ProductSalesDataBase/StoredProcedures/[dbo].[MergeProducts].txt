SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[MergeProducts]
    @Products ProductTableType READONLY
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- DELETE
        DELETE FROM Products
        OUTPUT
            DELETED.ProductID,
            'Delete',
            GETDATE(),
            CONCAT('Deleted: ', DELETED.Name)
        INTO ProductsChangeLog(ProductID, OperationType, Timestamp, Info)
        WHERE ProductID IN (
            SELECT ProductID FROM @Products WHERE OperationType = 'Delete'
        );

        -- UPDATE
        UPDATE p
        SET
            p.SKU = u.SKU,
            p.Name = u.Name,
            p.Category = u.Category,
            p.Price = u.Price,
            p.QuantityInStock = u.QuantityInStock,
            p.Description = u.Description,
            p.SaleStartDate = u.SaleStartDate
        OUTPUT
            INSERTED.ProductID,
            'Update',
            GETDATE(),
            CONCAT('Updated: ', INSERTED.Name)
        INTO ProductsChangeLog(ProductID, OperationType, Timestamp, Info)
        FROM Products p
        INNER JOIN @Products u ON p.ProductID = u.ProductID
        WHERE u.OperationType = 'Update';

        -- INSERT
DECLARE @InsertTable TABLE (
    ProductID INT,
    SKU NVARCHAR(50),
    Name NVARCHAR(150),
    Category NVARCHAR(100),
    Price DECIMAL(18,2),
    QuantityInStock INT,
    Description NVARCHAR(MAX),
    SaleStartDate DATE
);

INSERT INTO @InsertTable
SELECT
    ISNULL(ProductID, 0),
    NULLIF(SKU, ''),
    Name,
    Category,
    Price,
    QuantityInStock,
    Description,
    SaleStartDate
FROM @Products
WHERE OperationType = 'Insert';

UPDATE @InsertTable
SET SKU = CONCAT('SKU-', FORMAT(GETDATE(), 'yyyyMMdd'), '-', RIGHT('0000' + CAST(ABS(CHECKSUM(NEWID())) % 10000 AS VARCHAR), 4))
WHERE SKU IS NULL;

IF EXISTS (
    SELECT 1 FROM Products p
    JOIN @InsertTable t ON p.SKU = t.SKU
)
BEGIN
    RAISERROR('Duplicate SKU detected.', 16, 1);
    ROLLBACK TRANSACTION;
    RETURN;
END

INSERT INTO Products (SKU, Name, Category, Price, QuantityInStock, Description, SaleStartDate)
SELECT SKU, Name, Category, Price, QuantityInStock, Description, SaleStartDate
FROM @InsertTable;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;

        DECLARE @ErrorMessage NVARCHAR(MAX) = ERROR_MESSAGE();
        RAISERROR(@ErrorMessage, 16, 1);
    END CATCH
END
GO
